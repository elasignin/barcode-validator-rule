package com.ingramcontent.consolidated.labels;

import com.ingramcontent.consolidated.labels.model.BarcodeDetail;
import com.ingramcontent.consolidated.labels.model.OrderStatus;

rule "If Barcode is equal to '9999'"
	when 
		barcodeDetail: BarcodeDetail(barcodeValidator != null &&
		barcodeValidator.getBarcode() == "9999")
	then
		OrderStatus status = new OrderStatus();
		status.setSuccess(false);
		status.setMessageCode("1001");
		barcodeDetail.setOrderStatus(status);
	end
	
rule "If Barcode is not equal to '9999' and OrderInformation is null"
	when 
		barcodeDetail: BarcodeDetail(barcodeValidator != null &&
		barcodeValidator.getBarcode() != "9999" && 
		barcodeValidator.getToteBarcode()
		)
	then
		OrderStatus status = new OrderStatus();
		status.setSuccess(false);
		status.setMessageCode("1001");
		barcodeDetail.setOrderStatus(status);
	end	com.ingramcontent.consolidated.labels.model.BarcodeDetail( )
	
rule "If Barcode is not equal to '9999' and OrderInformation is not null and Barcode's length is not equal to BarcodeRule's length"
	when 
		barcodeDetail: BarcodeDetail(barcodeValidator != null &&
		barcodeValidator.getBarcode() != null &&
		barcodeValidator.getBarcode() != "9999" && 
		orderInformation != null && 
		orderInformation.getBarcodeRules() != null && 
		orderInformation.getBarcodeRules().isUsesCustomerSuppliedBarcode() &&
		barcodeValidator.getBarcode().length() != orderInformation.getBarcodeRules().getLength()
		)
	then
		OrderStatus status = new OrderStatus();
		status.setSuccess(false);
		status.setMessageCode("1005");
		barcodeDetail.setOrderStatus(status);
	end		